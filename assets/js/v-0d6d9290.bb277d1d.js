"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3250],{4004:(n,a,s)=>{s.r(a),s.d(a,{default:()=>Jn});var t=s(8e3),e=s(6471);const p=(0,t.uE)('<p>Input numerical values with a customizable range.</p><h3 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic usage</h3><p>Bind a variable to <code>v-model</code> in <code>&lt;el-input-number&gt;</code> element and you are set.</p><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>When inputting invalid string to the input box, input value will emit <code>NaN</code> to the upper layer as result of error</p></div>',4),l=(0,t.uE)('<h4 id="viwer-source" tabindex="-1"><a class="header-anchor" href="#viwer-source" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> Disabled</h3><p>The <code>disabled</code> attribute accepts a <code>boolean</code>, and if the value is <code>true</code>, the component is disabled. If you just need to control the value within a range, you can add min attribute to set the minimum value and <code>max</code> to set the maximum value. By default, the minimum value is <code>0</code>.</p>',4),o=(0,t.uE)('<h4 id="viwer-source-1" tabindex="-1"><a class="header-anchor" href="#viwer-source-1" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="steps" tabindex="-1"><a class="header-anchor" href="#steps" aria-hidden="true">#</a> Steps</h3><p>Allows you to define incremental steps.</p><p>Add <code>step</code> attribute to set the step.</p>',5),c=(0,t.uE)('<h4 id="viwer-source-2" tabindex="-1"><a class="header-anchor" href="#viwer-source-2" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-strictly" tabindex="-1"><a class="header-anchor" href="#step-strictly" aria-hidden="true">#</a> Step strictly</h3><p>The <code>step-strictly</code> attribute accepts a <code>boolean</code>. if this attribute is <code>true</code>, input value can only be multiple of step.</p>',4),u=(0,t.uE)('<h4 id="viwer-source-3" tabindex="-1"><a class="header-anchor" href="#viwer-source-3" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:stepStrictly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="precision" tabindex="-1"><a class="header-anchor" href="#precision" aria-hidden="true">#</a> Precision</h3><p>Add <code>precision</code> attribute to set the precision of input value.</p><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>The value of <code>precision</code> must be a non negative integer and should not be less than the decimal places of <code>step</code>.</p></div>',5),i=(0,t.uE)('<h4 id="viwer-source-4" tabindex="-1"><a class="header-anchor" href="#viwer-source-4" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:precision</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controls-position" tabindex="-1"><a class="header-anchor" href="#controls-position" aria-hidden="true">#</a> Controls Position</h3><p>Set <code>controls-position</code> to decide the position of control buttons.</p>',4),r=(0,t.uE)('<h4 id="viwer-source-5" tabindex="-1"><a class="header-anchor" href="#viwer-source-5" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span> <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:precision</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:controlsPosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>right<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="value-type" tabindex="-1"><a class="header-anchor" href="#value-type" aria-hidden="true">#</a> Value Type</h3><br><br>',5),d=(0,t.uE)('<h4 id="viwer-source-6" tabindex="-1"><a class="header-anchor" href="#viwer-source-6" aria-hidden="true">#</a> Viwer Source</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> {{ &#39;Value Type&#39; }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">effect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Light<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  {{ &#39;ID / INTEGER &#39; }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span>\n    <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> {{ &#39;Value Type&#39; }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">effect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Light<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  {{ &#39;NUMBER / QUANTITY &#39; }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span>\n    <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num2<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:valueType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>QUANTITY<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:precision</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> {{ &#39;Value Type&#39; }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-tag</span> <span class="token attr-name">effect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Light<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  {{ &#39;AMOUNT / COSTS_PLUS_PRICES &#39; }} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-tag</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FieldNumber</span>\n    <span class="token attr-name">:num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num3<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:valueType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>COSTS_PLUS_PRICES<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:controlsPosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>right<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:slotsCurrency</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>$<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h3>',3),k=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{style:{"text-align":"center"}},"Name"),(0,t._)("th",{style:{"text-align":"center"}},"Description"),(0,t._)("th",{style:{"text-align":"center"}},"Type"),(0,t._)("th",{style:{"text-align":"center"}},"Mandatory")])],-1),m=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"num")],-1),g=(0,t._)("td",{style:{"text-align":"center"}},"binding value",-1),v={style:{"text-align":"center"}},h=(0,t._)("strong",null,(0,e.zw)("number"),-1),b={style:{"text-align":"center"}},f=(0,t._)("strong",null,(0,e.zw)("true"),-1),_=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"valueType")],-1),y={style:{"text-align":"center"}},q=(0,t.Uk)("Type value "),w=(0,t._)("strong",null,(0,e.zw)("ID / INTEGER / NUMBER / QUANTITY / AMOUNT / COSTS_PLUS_PRICES"),-1),x={style:{"text-align":"center"}},W=(0,t._)("strong",null,(0,e.zw)("string"),-1),N={style:{"text-align":"center"}},S=(0,t._)("strong",null,(0,e.zw)("False"),-1),z=(0,t._)("h3",{id:"attributes",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#attributes","aria-hidden":"true"},"#"),(0,t.Uk)(" Attributes")],-1),T=(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",{style:{"text-align":"center"}},"Name"),(0,t._)("th",{style:{"text-align":"center"}},"Description"),(0,t._)("th",{style:{"text-align":"center"}},"Type"),(0,t._)("th",{style:{"text-align":"center"}},"Default")])],-1),L=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"min")],-1),E=(0,t._)("td",{style:{"text-align":"center"}},"the minimum allowed value",-1),C={style:{"text-align":"center"}},A=(0,t._)("strong",null,(0,e.zw)("number"),-1),D={style:{"text-align":"center"}},P=(0,t._)("strong",null,(0,e.zw)("-Infinity"),-1),U=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"max")],-1),F=(0,t._)("td",{style:{"text-align":"center"}},"the maximum allowed value",-1),I={style:{"text-align":"center"}},V=(0,t._)("strong",null,(0,e.zw)("number"),-1),B={style:{"text-align":"center"}},j=(0,t._)("strong",null,(0,e.zw)("Infinity"),-1),R=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"step")],-1),M=(0,t._)("td",{style:{"text-align":"center"}},"incremental step",-1),O={style:{"text-align":"center"}},G=(0,t._)("strong",null,(0,e.zw)("number"),-1),Q={style:{"text-align":"center"}},Y=(0,t._)("strong",null,(0,e.zw)("1"),-1),Z=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"stepStrictly")],-1),$=(0,t._)("td",{style:{"text-align":"center"}},"whether input value can only be multiple of step",-1),J={style:{"text-align":"center"}},H=(0,t._)("strong",null,(0,e.zw)("boolean"),-1),K={style:{"text-align":"center"}},X=(0,t._)("strong",null,(0,e.zw)("False"),-1),nn=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"precision")],-1),an=(0,t._)("td",{style:{"text-align":"center"}},"precision of input value",-1),sn={style:{"text-align":"center"}},tn=(0,t._)("strong",null,(0,e.zw)("number"),-1),en={style:{"text-align":"center"}},pn=(0,t._)("strong",null,(0,e.zw)("0"),-1),ln=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"controls")],-1),on=(0,t._)("td",{style:{"text-align":"center"}},"whether to enable the control buttons",-1),cn={style:{"text-align":"center"}},un=(0,t._)("strong",null,(0,e.zw)("boolean"),-1),rn={style:{"text-align":"center"}},dn=(0,t._)("strong",null,(0,e.zw)("False"),-1),kn=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"controlsPosition")],-1),mn=(0,t._)("td",{style:{"text-align":"center"}},"position of the control buttons",-1),gn={style:{"text-align":"center"}},vn=(0,t._)("strong",null,(0,e.zw)("strign"),-1),hn={style:{"text-align":"center"}},bn=(0,t._)("strong",null,(0,e.zw)("right"),-1),fn=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"disabled")],-1),_n=(0,t._)("td",{style:{"text-align":"center"}},[(0,t.Uk)("whether Switch is "),(0,t._)("code",null,"disabled")],-1),yn={style:{"text-align":"center"}},qn=(0,t._)("strong",null,(0,e.zw)("boolean"),-1),wn={style:{"text-align":"center"}},xn=(0,t._)("strong",null,(0,e.zw)("true"),-1),Wn=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"size")],-1),Nn={style:{"text-align":"center"}},Sn=(0,t.Uk)("size of Switch "),zn=(0,t.Uk)(" large / default / small "),Tn={style:{"text-align":"center"}},Ln=(0,t._)("strong",null,(0,e.zw)("string"),-1),En={style:{"text-align":"center"}},Cn=(0,t.Uk)((0,e.zw)("default")),An=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"placeholder")],-1),Dn=(0,t._)("td",{style:{"text-align":"center"}},"placeholder the Select",-1),Pn={style:{"text-align":"center"}},Un=(0,t._)("strong",null,(0,e.zw)("string"),-1),Fn={style:{"text-align":"center"}},In=(0,t._)("strong",null,(0,e.zw)("Select"),-1),Vn=(0,t._)("td",{style:{"text-align":"center"}},[(0,t._)("code",null,"slotsCurrency")],-1),Bn=(0,t._)("td",{style:{"text-align":"center"}},"The format or symbol of the currency to display",-1),jn={style:{"text-align":"center"}},Rn=(0,t._)("strong",null,(0,e.zw)("string"),-1),Mn={style:{"text-align":"center"}},On=(0,t._)("strong",null,(0,e.zw)("$"),-1),Gn=(0,t.uE)('<h3 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h3><table><thead><tr><th style="text-align:center;">Name</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>header</code></td><td style="text-align:center;">Customize Default Content Top</td></tr><tr><td style="text-align:center;"><code>footer</code></td><td style="text-align:center;">Customize Default Content Bottom</td></tr></tbody></table><h3 id="example-for-developer" tabindex="-1"><a class="header-anchor" href="#example-for-developer" aria-hidden="true">#</a> Example for Developer</h3>',3),Qn={href:"https://stackblitz.com/edit/fields-number?file=app.vue",target:"_blank",rel:"noopener noreferrer"},Yn=(0,t._)("img",{src:"https://developer.stackblitz.com/img/open_in_stackblitz.svg",alt:"Open in StackBlitz"},null,-1),Zn=(0,t.uE)('<h3 id="directory" tabindex="-1"><a class="header-anchor" href="#directory" aria-hidden="true">#</a> Directory</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>  └─ src                                            <span class="token comment"># Main source code.</span>\n      └── Components                                <span class="token comment"># Global components</span>\n              └── Atoms                             <span class="token comment"># Atom components</span>\n                  └── FieldNumber                   <span class="token comment"># Field Number specific components.</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),$n={},Jn=(0,s(3860).Z)($n,[["render",function(n,a){const s=(0,t.up)("NumberBsic"),e=(0,t.up)("NumberDisabled"),$n=(0,t.up)("NumberSteps"),Jn=(0,t.up)("NumberStepsStrictly"),Hn=(0,t.up)("NumberPrecision"),Kn=(0,t.up)("NumberControlsPosition"),Xn=(0,t.up)("NumberValueType"),na=(0,t.up)("el-tag"),aa=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t._)("span",null,[p,(0,t.Wm)(s),l,(0,t.Wm)(e),o,(0,t.Wm)($n),c,(0,t.Wm)(Jn),u,(0,t.Wm)(Hn),i,(0,t.Wm)(Kn),r,(0,t.Wm)(Xn),d,(0,t._)("table",null,[k,(0,t._)("tbody",null,[(0,t._)("tr",null,[m,g,(0,t._)("td",v,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[h])),_:1})]),(0,t._)("td",b,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[f])),_:1})])]),(0,t._)("tr",null,[_,(0,t._)("td",y,[q,(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[w])),_:1})]),(0,t._)("td",x,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[W])),_:1})]),(0,t._)("td",N,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[S])),_:1})])])])]),z,(0,t._)("table",null,[T,(0,t._)("tbody",null,[(0,t._)("tr",null,[L,E,(0,t._)("td",C,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[A])),_:1})])),_:1})]),(0,t._)("td",D,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[P])),_:1})])]),(0,t._)("tr",null,[U,F,(0,t._)("td",I,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[V])),_:1})])),_:1})]),(0,t._)("td",B,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[j])),_:1})])]),(0,t._)("tr",null,[R,M,(0,t._)("td",O,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[G])),_:1})])),_:1})]),(0,t._)("td",Q,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[Y])),_:1})])]),(0,t._)("tr",null,[Z,$,(0,t._)("td",J,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[H])),_:1})])),_:1})]),(0,t._)("td",K,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[X])),_:1})])]),(0,t._)("tr",null,[nn,an,(0,t._)("td",sn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[tn])),_:1})])),_:1})]),(0,t._)("td",en,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[pn])),_:1})])]),(0,t._)("tr",null,[ln,on,(0,t._)("td",cn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[un])),_:1})])),_:1})]),(0,t._)("td",rn,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[dn])),_:1})])]),(0,t._)("tr",null,[kn,mn,(0,t._)("td",gn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[vn])),_:1})])),_:1})]),(0,t._)("td",hn,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[bn])),_:1})])]),(0,t._)("tr",null,[fn,_n,(0,t._)("td",yn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[qn])),_:1})])),_:1})]),(0,t._)("td",wn,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[xn])),_:1})])]),(0,t._)("tr",null,[Wn,(0,t._)("td",Nn,[Sn,(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[zn])),_:1})]),(0,t._)("td",Tn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[Ln])),_:1})])),_:1})]),(0,t._)("td",En,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[Cn])),_:1})])]),(0,t._)("tr",null,[An,Dn,(0,t._)("td",Pn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[Un])),_:1})])),_:1})]),(0,t._)("td",Fn,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[In])),_:1})])]),(0,t._)("tr",null,[Vn,Bn,(0,t._)("td",jn,[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[(0,t.Wm)(na,{effect:"Light"},{default:(0,t.w5)((()=>[Rn])),_:1})])),_:1})]),(0,t._)("td",Mn,[(0,t.Wm)(na,{effect:"dark",round:""},{default:(0,t.w5)((()=>[On])),_:1})])])])]),Gn,(0,t._)("p",null,[(0,t._)("a",Qn,[Yn,(0,t.Wm)(aa)])]),Zn])])}]])},2700:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-0d6d9290","path":"/docs/component/Atoms/FieldNumber.html","title":"Number","lang":"en-US","frontmatter":{"title":"Number","category":["Component","Atom"],"tag":["Number","Atom","Component"],"footer":"<a href=\\"https://github.com/adempiere\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">ADempiere Community</a> | <a href=\\"https://www.adempiere.io/about/site\\">About Site</a>","summary":"Input numerical values with a customizable range. Basic usage Bind a variable to v-model in `` element and you are set. When inputting invalid string to the input box, input value ","head":[["meta",{"property":"og:url","content":"https://github.com/adempiere/adempiere-site.github.io/docs/component/Atoms/FieldNumber.html"}],["meta",{"property":"og:title","content":"Number"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-21T14:04:10.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"Number"}],["meta",{"property":"article:tag","content":"Atom"}],["meta",{"property":"article:tag","content":"Component"}],["meta",{"property":"article:modified_time","content":"2023-03-21T14:04:10.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"Basic usage","slug":"basic-usage","children":[]},{"level":3,"title":"Disabled","slug":"disabled","children":[]},{"level":3,"title":"Steps","slug":"steps","children":[]},{"level":3,"title":"Step strictly","slug":"step-strictly","children":[]},{"level":3,"title":"Precision","slug":"precision","children":[]},{"level":3,"title":"Controls Position","slug":"controls-position","children":[]},{"level":3,"title":"Value Type","slug":"value-type","children":[]},{"level":3,"title":"Props","slug":"props","children":[]},{"level":3,"title":"Attributes","slug":"attributes","children":[]},{"level":3,"title":"Slots","slug":"slots","children":[]},{"level":3,"title":"Example for Developer","slug":"example-for-developer","children":[]},{"level":3,"title":"Directory","slug":"directory","children":[]}],"git":{"createdTime":1679407450000,"updatedTime":1679407450000,"contributors":[{"name":"Elsio Sanchez","email":"45974454+elsiosanchez@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.85,"words":855},"filePathRelative":"docs/component/Atoms/FieldNumber.md","localizedDate":"March 21, 2023"}')}}]);